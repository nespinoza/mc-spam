# template auto generated by pptemplate
# uncomment commands, copy and fill in as needed
# see also the PDL::PP manpage

# pp_bless('');       # package namespace of pp_def'ed functions
		      # defaults to 'PDL'

# pp_add_boot('');    # code to add to the XS boot section

 pp_addhdr('

#include<stdio.h>
#include<math.h>

#include "../planet.h"

');     
		    

# pp_addpm('');       # add perl code to the perl module that PP will create

# pp_add_exported(''); # add the list of function names
                       # to the list of exported functions 

# pp_addxs('');        # add plain XS code to the XS section

# pp_add_isa(qw//);    # inheritance business: add arglist to modules @ISA


pp_def('RV', 
Pars => ' double t(); double v0(); double K(); double w(); double e(); 
double t0(); double period(); double [o] rv();', 
Code => '

double res;

res = pl_rv( $t(), $v0(), $K(), $w(), $e(), $t0(), $period() );

$rv() = res;

');  

pp_def('true_anomaly',
Pars => 'double t(); double t0(); double e(); double period(); 
double [o] ta();',
Code => '

double res;

res = pl_true_anomaly($t(), $t0(), $e(), $period());

$ta() = res;

');  

pp_def('Orbit',
Pars => 'double t(); double t0(); double period(); double a(); double e(); double w(); double I(); double Omega(); double [o] xx(); double [o] yy(); double [o] zz();',
Code => '

double xx,yy,zz;

pl_Orbit($t(), $t0(), $period(), $a(), $e(), $w(), $I(), $Omega(), &xx, &yy, &zz); 

$xx() = xx;
$yy() = yy;
$zz() = zz;

');  

pp_def('transit_times',
Pars => 'double e(); double w(); double t0(); double period(); double [o] t1(); double [o] t2();',
Code => '

double a, b;

pl_transit_times($e(), $w(), $t0(), $period(), &a, &b);
$t1() = a;
$t2() = b;

');  

pp_done(); 

